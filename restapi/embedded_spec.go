// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is the API specification for Zus token project",
    "title": "Zus API",
    "version": "0.1.0"
  },
  "host": "api.zus.com",
  "basePath": "/v1",
  "paths": {
    "/*": {
      "options": {
        "security": [],
        "produces": [
          "application/json"
        ],
        "operationId": "optionsAllow",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/hash": {
      "post": {
        "security": [],
        "tags": [
          "tokens"
        ],
        "summary": "Creates new hash",
        "operationId": "createHash",
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/GeneralError"
            }
          }
        }
      }
    },
    "/hashes": {
      "get": {
        "description": "Get all hashes received",
        "tags": [
          "tokens"
        ],
        "summary": "Get all hashes received",
        "operationId": "getHashes",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TokenInfo"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/GeneralError"
            }
          }
        }
      }
    },
    "/hashes/{id}": {
      "get": {
        "description": "Get hahs info",
        "tags": [
          "tokens"
        ],
        "summary": "Get hahs info",
        "operationId": "getHash",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TokenInfo"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/GeneralError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GeneralError": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "TokenInfo": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "hash": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "TokenResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "hash": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Token actions",
      "name": "tokens"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is the API specification for Zus token project",
    "title": "Zus API",
    "version": "0.1.0"
  },
  "host": "api.zus.com",
  "basePath": "/v1",
  "paths": {
    "/*": {
      "options": {
        "security": [],
        "produces": [
          "application/json"
        ],
        "operationId": "optionsAllow",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/hash": {
      "post": {
        "security": [],
        "tags": [
          "tokens"
        ],
        "summary": "Creates new hash",
        "operationId": "createHash",
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/GeneralError"
            }
          }
        }
      }
    },
    "/hashes": {
      "get": {
        "description": "Get all hashes received",
        "tags": [
          "tokens"
        ],
        "summary": "Get all hashes received",
        "operationId": "getHashes",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TokenInfo"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/GeneralError"
            }
          }
        }
      }
    },
    "/hashes/{id}": {
      "get": {
        "description": "Get hahs info",
        "tags": [
          "tokens"
        ],
        "summary": "Get hahs info",
        "operationId": "getHash",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TokenInfo"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/GeneralError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GeneralError": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "TokenInfo": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "hash": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "TokenResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "hash": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Token actions",
      "name": "tokens"
    }
  ]
}`))
}
