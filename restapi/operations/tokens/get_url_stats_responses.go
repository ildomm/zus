// Code generated by go-swagger; DO NOT EDIT.

package tokens

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/ildomm/zus/models"
)

// GetURLStatsOKCode is the HTTP code returned for type GetURLStatsOK
const GetURLStatsOKCode int = 200

/*GetURLStatsOK Successful operation

swagger:response getUrlStatsOK
*/
type GetURLStatsOK struct {

	/*
	  In: Body
	*/
	Payload *models.TokenInfo `json:"body,omitempty"`
}

// NewGetURLStatsOK creates GetURLStatsOK with default headers values
func NewGetURLStatsOK() *GetURLStatsOK {

	return &GetURLStatsOK{}
}

// WithPayload adds the payload to the get Url stats o k response
func (o *GetURLStatsOK) WithPayload(payload *models.TokenInfo) *GetURLStatsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Url stats o k response
func (o *GetURLStatsOK) SetPayload(payload *models.TokenInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetURLStatsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetURLStatsDefault error

swagger:response getUrlStatsDefault
*/
type GetURLStatsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewGetURLStatsDefault creates GetURLStatsDefault with default headers values
func NewGetURLStatsDefault(code int) *GetURLStatsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetURLStatsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get Url stats default response
func (o *GetURLStatsDefault) WithStatusCode(code int) *GetURLStatsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get Url stats default response
func (o *GetURLStatsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get Url stats default response
func (o *GetURLStatsDefault) WithPayload(payload *models.GeneralError) *GetURLStatsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Url stats default response
func (o *GetURLStatsDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetURLStatsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
