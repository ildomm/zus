// Code generated by go-swagger; DO NOT EDIT.

package tokens

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/ildomm/zus/models"
)

// GetHashsOKCode is the HTTP code returned for type GetHashsOK
const GetHashsOKCode int = 200

/*GetHashsOK Successful operation

swagger:response getHashsOK
*/
type GetHashsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.TokenInfo `json:"body,omitempty"`
}

// NewGetHashsOK creates GetHashsOK with default headers values
func NewGetHashsOK() *GetHashsOK {

	return &GetHashsOK{}
}

// WithPayload adds the payload to the get hashs o k response
func (o *GetHashsOK) WithPayload(payload []*models.TokenInfo) *GetHashsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get hashs o k response
func (o *GetHashsOK) SetPayload(payload []*models.TokenInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHashsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.TokenInfo, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetHashsDefault error

swagger:response getHashsDefault
*/
type GetHashsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewGetHashsDefault creates GetHashsDefault with default headers values
func NewGetHashsDefault(code int) *GetHashsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetHashsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get hashs default response
func (o *GetHashsDefault) WithStatusCode(code int) *GetHashsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get hashs default response
func (o *GetHashsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get hashs default response
func (o *GetHashsDefault) WithPayload(payload *models.GeneralError) *GetHashsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get hashs default response
func (o *GetHashsDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHashsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
